{"version":3,"sources":["utils/API.js","components/userTable.tsx","App.tsx","index.tsx"],"names":["axios","get","UserTable","useState","employees","setEmployees","globalFilter","setGlobalFilter","dt","useRef","useEffect","API","then","data","listEmployees","results","map","employee","name","first","last","street","location","number","city","state","zipcode","postcode","phone","email","image","picture","medium","footer","length","header","className","type","onInput","e","target","value","placeholder","ref","removableSort","emptyMessage","resizableColumns","columnResizeMode","field","sortable","body","rowData","Fragment","filter","filterPlaceholder","style","width","src","alt","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c1b60cbf.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport default {\r\n    getUsers: function() {\r\n        return axios.get(\"https://randomuser.me/api/?results=100&nat=us&exc=login\")\r\n    }\r\n};","import React, { useState, useEffect, useRef} from \"react\";\r\n\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport API from \"../utils/API\";\r\n\r\nconst UserTable = () => {\r\n\r\n    const [employees, setEmployees] = useState([]);\r\n    const [globalFilter, setGlobalFilter] = useState(null);\r\n    const dt = useRef(null);\r\n\r\n    useEffect(() => {\r\n        API.getUsers().then(data => {\r\n            const listEmployees = data.data.results.map((employee:any) => {\r\n                return {\r\n                    name: `${employee.name.first} ${employee.name.last}`,\r\n                    street: `${employee.location.street.number} ${employee.location.street.name}`,\r\n                    city: `${employee.location.city}`,\r\n                    state: `${employee.location.state}`,\r\n                    zipcode: `${employee.location.postcode}`,\r\n                    phone: `${employee.phone}`,\r\n                    email: `${employee.email}`,\r\n                    image: `${employee.picture.medium}`\r\n                }\r\n            })\r\n            setEmployees(listEmployees)\r\n\r\n\r\n        });\r\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    const imageBodyTemplate = (rowData:any) => {\r\n        return <img src={`${rowData.image}`} alt={rowData.name} className=\"p-shadow-2\" />;\r\n    }\r\n\r\n    const footer = `There are ${employees ? employees.length : 0} employees in the directory.`;\r\n    \r\n\r\n    const nameBodyTemplate = (rowData:any) => {\r\n        return (\r\n            <React.Fragment>\r\n                {rowData.name}\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    const cityBodyTemplate = (rowData:any) => {\r\n        return (\r\n            <React.Fragment>\r\n                {rowData.city}\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    const stateBodyTemplate = (rowData:any) => {\r\n        return (\r\n            <React.Fragment>\r\n                {rowData.state}\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    const zipBodyTemplate = (rowData:any) => {\r\n        return (\r\n            <React.Fragment>\r\n                {rowData.zipcode}\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    const header = (\r\n        <div className=\"table-header\">\r\n           <p>Employees</p> \r\n            <div className=\"p-input-icon-left\">\r\n                <i className=\"pi pi-search\" />\r\n                <InputText type=\"search\" onInput={(e) => setGlobalFilter((e.target as any).value)} placeholder=\"Global Search\" />\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div className=\"card\">\r\n            <DataTable ref={dt} value={employees} header={header} footer={footer} className=\"p-datatable-striped p-text-center\" removableSort globalFilter={globalFilter} emptyMessage=\"No customers found.\" resizableColumns columnResizeMode=\"fit\">\r\n                <Column field=\"name\" header=\"Name\" sortable body={nameBodyTemplate} filter filterPlaceholder=\"Search by name\" style={{width:'10%'}}></Column>\r\n                <Column field=\"street\" header=\"Street\" style={{width:'10%'}}></Column>\r\n                <Column field=\"city\" header=\"City\" sortable body={cityBodyTemplate} filter filterPlaceholder=\"Search by city\" style={{width:'10%'}}></Column>\r\n                <Column field=\"state\" header=\"State\" sortable body={stateBodyTemplate} filter filterPlaceholder=\"Search by state\" style={{width:'10%'}}></Column>\r\n                <Column field=\"zipcode\" header=\"Zip\" body={zipBodyTemplate} filter filterPlaceholder=\"Search by zip\" style={{width:'10%'}}></Column>\r\n                <Column field=\"phone\" header=\"Phone\" style={{width:'10%'}}></Column>\r\n                <Column field=\"email\" header=\"Email\" className=\"email\" style={{width:'20%'}}></Column>                  \r\n                <Column field=\"image\" header=\"Image\" body={imageBodyTemplate} style={{width:'10%'}}></Column>\r\n            </DataTable>\r\n        </div>\r\n    )\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport default UserTable;\r\n","import React from 'react';\nimport './App.css';\nimport UserTable from \"./components/userTable\";\n\nfunction App() {\n\n  return (\n      <div className=\"heading\">\n        <h1>Employee Directory</h1> \n        <div className=\"content\">\n          <UserTable />\n        </div>\n      </div>  \n      \n     \n    \n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}